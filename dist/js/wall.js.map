{"version":3,"sources":["wall.js"],"names":["window","onload","tagValue","resultsUL","document","querySelector","console","log","displayData","tag","textPEl","createElement","innerHTML","classList","add","xy","getRandomPosition","style","top","left","transform","Math","random","color","appendChild","processTheData","tagArray","length","i","tempArrayElement","element","offsetHeight","x","body","clientHeight","y","offsetWidth","clientWidth","randomX","floor","randomY","axios","get","then","response","data","catch","error"],"mappings":";AACA;AACAA,OAAOC,MAAP,GAAgB,YAAU;;AAKtB,QAAIC,WAAW,EAAf;AACA,QAAIC,YAAYC,SAASC,aAAT,CAAuB,YAAvB,CAAhB;AACAC,YAAQC,GAAR,CAAYJ,SAAZ;;AAEA,aAASK,WAAT,CAAqBC,GAArB,EAAyB;AACrBH,gBAAQC,GAAR,CAAY,sBAAZ,EAAoCE,GAApC;AACA,YAAIC,UAAUN,SAASO,aAAT,CAAuB,GAAvB,CAAd;AACAD,gBAAQE,SAAR,GAAoBH,GAApB;AACAC,gBAAQG,SAAR,CAAkBC,GAAlB,CAAsB,KAAtB;AACH,YAAIC,KAAKC,kBAAkBN,OAAlB,CAAT;AACAA,gBAAQO,KAAR,CAAcC,GAAd,GAAoBH,GAAG,CAAH,IAAQ,IAA5B;AACGL,gBAAQO,KAAR,CAAcE,IAAd,GAAqBJ,GAAG,CAAH,IAAQ,IAA7B;AACAL,gBAAQO,KAAR,CAAcG,SAAd,GAA2B,UAASC,KAAKC,MAAL,KAAc,EAAd,GAAiB,EAAG,MAAxD;AACAZ,gBAAQO,KAAR,CAAcM,KAAd,GAAuB,OAAMF,KAAKC,MAAL,KAAgB,GAAhB,GAAsB,GAAI,KAAID,KAAKC,MAAL,KAAgB,GAAhB,GAAsB,GAAI,KAAID,KAAKC,MAAL,KAAgB,GAAhB,GAAsB,GAAI,GAAnH;AACA;AACA;AACAnB,kBAAUqB,WAAV,CAAsBd,OAAtB;AAEH;;AAED,aAASe,cAAT,CAAwBC,QAAxB,EAAkCvB,SAAlC,EAA4C;AACxC,YAAIuB,SAASC,MAAb,EAAoB;AAChBxB,sBAAUS,SAAV,GAAsB,EAAtB;AACA,iBAAK,IAAIgB,IAAG,CAAZ,EAAeA,KAAKF,SAASC,MAAT,GAAkB,CAAtC,EAAyCC,GAAzC,EAA6C;AACzC,oBAAIC,mBAAmBH,SAASE,CAAT,CAAvB;AACA;AACApB,4BAAYqB,gBAAZ;AACH;AACJ;AACJ;;AAED,aAASb,iBAAT,CAA2Bc,OAA3B,EAAoC;AAChCxB,gBAAQC,GAAR,CAAY,iBAAZ,EAA+BuB,QAAQC,YAAvC;AACA,YAAIC,IAAI5B,SAAS6B,IAAT,CAAcF,YAAd,GAA2BD,QAAQI,YAA3C;AACA,YAAIC,IAAI/B,SAAS6B,IAAT,CAAcG,WAAd,GAA0BN,QAAQO,WAA1C;AACA,YAAIC,UAAUjB,KAAKkB,KAAL,CAAWlB,KAAKC,MAAL,KAAcU,CAAzB,CAAd;AACA,YAAIQ,UAAUnB,KAAKkB,KAAL,CAAWlB,KAAKC,MAAL,KAAca,CAAzB,CAAd;AACA,eAAO,CAACG,OAAD,EAASE,OAAT,CAAP;AACH;;AAEDC,UAAMC,GAAN,CAAU,2BAAV,EAAuC;AACnC,eAAO;AAD4B,KAAvC,EAGGC,IAHH,CAGQ,UAAUC,QAAV,EAAoB;AACxBtC,gBAAQC,GAAR,CAAY,qBAAZ,EAAkCqC,SAASC,IAA3C;AACApB,uBAAemB,SAASC,IAAxB,EAA8B1C,SAA9B;AACD,KANH,EAOG2C,KAPH,CAOS,UAAUC,KAAV,EAAiB;AACtBzC,gBAAQC,GAAR,CAAYwC,KAAZ;AACD,KATH;AAUH,CAvDD;AAwDA","file":"wall.js","sourcesContent":["\n// upon page load, ask the server for all the tags it has saved, \nwindow.onload = function(){\n\n    \n\t\n    \n    let tagValue = [];\n    let resultsUL = document.querySelector(\".wall-post\");\n    console.log(resultsUL);\n\n    function displayData(tag){\n        console.log('tag in displayData: ', tag);\n        var textPEl = document.createElement('p');\n        textPEl.innerHTML = tag;\n        textPEl.classList.add('tag');\n\t    let xy = getRandomPosition(textPEl);\n\t    textPEl.style.top = xy[0] + 'px';\n        textPEl.style.left = xy[1] + 'px';\n        textPEl.style.transform = `rotate(${Math.random()*60-30}deg)`;\n        textPEl.style.color = `rgb(${Math.random() * 155 + 100}, ${Math.random() * 155 + 100}, ${Math.random() * 155 + 100})`;\n        //style.top = Math.random() * 100 + \"%\";\n        //style.left = Math.random() * 100 + \"%\";\n        resultsUL.appendChild(textPEl);\n\n    }\n\n    function processTheData(tagArray, resultsUL){\n        if (tagArray.length){\n            resultsUL.innerHTML = '';\n            for (var i= 0; i <= tagArray.length - 1; i++){\n                var tempArrayElement = tagArray[i];\n                // console.log('this is my temp', tempArrayElement);\n                displayData(tempArrayElement);\n            }\n        }\n    }\n\n    function getRandomPosition(element) {\n        console.log('getRandm elemnt', element.offsetHeight)\n        var x = document.body.offsetHeight-element.clientHeight;\n        var y = document.body.offsetWidth-element.clientWidth;\n        var randomX = Math.floor(Math.random()*x);\n        var randomY = Math.floor(Math.random()*y);\n        return [randomX,randomY];\n    }\n\n    axios.get('http://localhost:4200/tag', {\n        'tag': 'tagValue'\n      })\n      .then(function (response) {\n        console.log('get response.data: ',response.data);\n        processTheData(response.data, resultsUL)\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n}\n// and put them on the screen"]}